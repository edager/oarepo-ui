name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: '0 3 * * 6'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  Tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        requirements-level: [min, pypi]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          mkdir pypi
          mkdir variables
          pip install --upgrade pip 'setuptools<58.0.0' py poetry
          poetry config virtualenvs.in-project true --local
          python -m venv .venv
          source .venv/bin/activate
          .venv/bin/pip install -U 'setuptools<58.0.0' pip wheel
          poetry update --lock
          poetry export --without-hashes -f requirements.txt -o pypi/requirements-build.txt
          poetry export --without-hashes --dev -f requirements.txt -o pypi/requirements-dev.txt
          .venv/bin/pip install -r pypi/requirements-build.txt
          poetry install -vvv --no-dev
          cp poetry.lock pypi/
      - name: Run tests
        run: |
          ./run-tests.sh
